-- ASTD Webhook System v·ªõi UI
-- Wait for game to load
repeat wait() until game:IsLoaded()

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- Player v√† GUI
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Wave tracking
local Wave = ReplicatedStorage:WaitForChild("Wave")

-- Modules
local InventoryMod = require(ReplicatedStorage.Mods.InventoryMod)

-- Configuration
local CONFIG = {
    WEBHOOK_URL = _G.WebhookLink or "",
    COLORS = {
        VICTORY = 0x00FF00,
        DEFEAT = 0xFF0000,
        DEFAULT = 0x7289DA,
        WARNING = 0xFF8C00
    },
    ICONS = {
        TIME = "‚è±Ô∏è", DAMAGE = "üí•", ELIMINATIONS = "‚öîÔ∏è", WORLD = "üåç",
        CHAPTER = "üìñ", XP = "‚ú®", REWARDS = "üéÅ", VICTORY = "üéâ",
        DEFEAT = "üò¢", SUMMARY = "üìä", WAVE = "üåä", GEMS = "üíé"
    }
}

-- UI Settings (l∆∞u trong _G ƒë·ªÉ persistent)
_G.WebhookSettings = _G.WebhookSettings or {
    enabled = false,
    webhookUrl = "",
    sendOnVictory = true,
    sendOnDefeat = true,
    showNotifications = true,
    autoClose = false
}

-- Utility Functions
local Utils = {}

function Utils.formatTime(seconds)
    if not seconds or seconds <= 0 then return "0.00s" end
    local fraction = seconds - math.floor(seconds)
    local totalSeconds = math.floor(seconds)
    local hours = math.floor(totalSeconds / 3600)
    local minutes = math.floor((totalSeconds % 3600) / 60)
    local secs = (totalSeconds % 60) + fraction

    if hours > 0 then
        return string.format("%dh %02dm %05.2fs", hours, minutes, secs)
    elseif minutes > 0 then
        return string.format("%dm %05.2fs", minutes, secs)
    else
        return string.format("%05.2fs", secs)
    end
end

function Utils.formatNumber(number)
    if not number then return "0" end
    if number >= 1e12 then return string.format("%.2fT", number / 1e12)
    elseif number >= 1e9 then return string.format("%.2fB", number / 1e9)
    elseif number >= 1e6 then return string.format("%.2fM", number / 1e6)
    elseif number >= 1e3 then return string.format("%.2fK", number / 1e3) end
    
    local formatted = tostring(math.floor(number))
    while true do
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if k == 0 then break end
    end
    return formatted
end

function Utils.getItemAmount(itemName)
    local success, inventory = pcall(function() return InventoryMod.Get() end)
    if not success or not inventory then return 0 end
    for _, item in pairs(inventory) do
        if item and item.Name == itemName then
            return item.Amount or 0
        end
    end
    return 0
end

-- Notification System
local Notifications = {}

function Notifications.create(title, message, duration)
    if not _G.WebhookSettings.showNotifications then return end
    
    local notification = Instance.new("ScreenGui")
    notification.Name = "WebhookNotification"
    notification.Parent = PlayerGui
    notification.ResetOnSpawn = false
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 80)
    frame.Position = UDim2.new(1, -320, 0, 20)
    frame.BackgroundColor3 = Color3.fromRGB(32, 34, 37)
    frame.BorderSizePixel = 0
    frame.Parent = notification
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -20, 0, 25)
    titleLabel.Position = UDim2.new(0, 10, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextSize = 14
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = frame
    
    local messageLabel = Instance.new("TextLabel")
    messageLabel.Size = UDim2.new(1, -20, 0, 40)
    messageLabel.Position = UDim2.new(0, 10, 0, 30)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = message
    messageLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    messageLabel.TextSize = 12
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.TextWrapped = true
    messageLabel.Parent = frame
    
    -- Animation
    frame.Position = UDim2.new(1, 20, 0, 20)
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    local tween = TweenService:Create(frame, tweenInfo, {Position = UDim2.new(1, -320, 0, 20)})
    tween:Play()
    
    -- Auto remove
    game:GetService("Debris"):AddItem(notification, duration or 5)
    
    -- Slide out animation before removal
    wait(duration - 0.5 or 4.5)
    local slideOut = TweenService:Create(frame, TweenInfo.new(0.3), {Position = UDim2.new(1, 20, 0, 20)})
    slideOut:Play()
end

-- UI Creation
local function createUI()
    -- Main ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ASTDWebhookUI"
    screenGui.Parent = PlayerGui
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Toggle Button (minimized state)
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 120, 0, 40)
    toggleButton.Position = UDim2.new(0, 20, 0, 100)
    toggleButton.BackgroundColor3 = Color3.fromRGB(32, 34, 37)
    toggleButton.Text = "üìä ASTD Webhook"
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.TextSize = 12
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Parent = screenGui
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 8)
    toggleCorner.Parent = toggleButton
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 400, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
    mainFrame.BackgroundColor3 = Color3.fromRGB(32, 34, 37)
    mainFrame.BorderSizePixel = 0
    mainFrame.Visible = false
    mainFrame.Parent = screenGui
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 12)
    mainCorner.Parent = mainFrame
    
    -- Header
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 60)
    header.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
    header.BorderSizePixel = 0
    header.Parent = mainFrame
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 12)
    headerCorner.Parent = header
    
    local headerBottom = Instance.new("Frame")
    headerBottom.Size = UDim2.new(1, 0, 0, 12)
    headerBottom.Position = UDim2.new(0, 0, 1, -12)
    headerBottom.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
    headerBottom.BorderSizePixel = 0
    headerBottom.Parent = header
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -100, 1, 0)
    titleLabel.Position = UDim2.new(0, 20, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "üéÆ ASTD Webhook Manager"
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = header
    
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 40, 0, 40)
    closeButton.Position = UDim2.new(1, -50, 0, 10)
    closeButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    closeButton.Text = "‚úï"
    closeButton.TextColor3 = Color3.new(1, 1, 1)
    closeButton.TextSize = 16
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Parent = header
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 8)
    closeCorner.Parent = closeButton
    
    -- Content ScrollFrame
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -20, 1, -80)
    scrollFrame.Position = UDim2.new(0, 10, 0, 70)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 6
    scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(88, 101, 242)
    scrollFrame.Parent = mainFrame
    
    local contentLayout = Instance.new("UIListLayout")
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 10)
    contentLayout.Parent = scrollFrame
    
    -- Status Section
    local statusSection = Instance.new("Frame")
    statusSection.Size = UDim2.new(1, 0, 0, 80)
    statusSection.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
    statusSection.BorderSizePixel = 0
    statusSection.LayoutOrder = 1
    statusSection.Parent = scrollFrame
    
    local statusCorner = Instance.new("UICorner")
    statusCorner.CornerRadius = UDim.new(0, 8)
    statusCorner.Parent = statusSection
    
    local statusTitle = Instance.new("TextLabel")
    statusTitle.Size = UDim2.new(1, -20, 0, 25)
    statusTitle.Position = UDim2.new(0, 10, 0, 5)
    statusTitle.BackgroundTransparency = 1
    statusTitle.Text = "üìä Status"
    statusTitle.TextColor3 = Color3.new(1, 1, 1)
    statusTitle.TextSize = 14
    statusTitle.Font = Enum.Font.GothamBold
    statusTitle.TextXAlignment = Enum.TextXAlignment.Left
    statusTitle.Parent = statusSection
    
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(1, -20, 0, 45)
    statusLabel.Position = UDim2.new(0, 10, 0, 30)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "‚ùå Webhook Disabled"
    statusLabel.TextColor3 = Color3.fromRGB(220, 53, 69)
    statusLabel.TextSize = 12
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    statusLabel.TextWrapped = true
    statusLabel.Parent = statusSection
    
    -- Enable/Disable Toggle
    local enableSection = Instance.new("Frame")
    enableSection.Size = UDim2.new(1, 0, 0, 60)
    enableSection.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
    enableSection.BorderSizePixel = 0
    enableSection.LayoutOrder = 2
    enableSection.Parent = scrollFrame
    
    local enableCorner = Instance.new("UICorner")
    enableCorner.CornerRadius = UDim.new(0, 8)
    enableCorner.Parent = enableSection
    
    local enableButton = Instance.new("TextButton")
    enableButton.Name = "EnableButton"
    enableButton.Size = UDim2.new(1, -20, 0, 40)
    enableButton.Position = UDim2.new(0, 10, 0, 10)
    enableButton.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
    enableButton.Text = "üîÑ Enable Webhook"
    enableButton.TextColor3 = Color3.new(1, 1, 1)
    enableButton.TextSize = 14
    enableButton.Font = Enum.Font.GothamBold
    enableButton.Parent = enableSection
    
    local enableButtonCorner = Instance.new("UICorner")
    enableButtonCorner.CornerRadius = UDim.new(0, 8)
    enableButtonCorner.Parent = enableButton
    
    -- Webhook URL Section
    local urlSection = Instance.new("Frame")
    urlSection.Size = UDim2.new(1, 0, 0, 100)
    urlSection.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
    urlSection.BorderSizePixel = 0
    urlSection.LayoutOrder = 3
    urlSection.Parent = scrollFrame
    
    local urlCorner = Instance.new("UICorner")
    urlCorner.CornerRadius = UDim.new(0, 8)
    urlCorner.Parent = urlSection
    
    local urlTitle = Instance.new("TextLabel")
    urlTitle.Size = UDim2.new(1, -20, 0, 25)
    urlTitle.Position = UDim2.new(0, 10, 0, 5)
    urlTitle.BackgroundTransparency = 1
    urlTitle.Text = "üîó Discord Webhook URL"
    urlTitle.TextColor3 = Color3.new(1, 1, 1)
    urlTitle.TextSize = 14
    urlTitle.Font = Enum.Font.GothamBold
    urlTitle.TextXAlignment = Enum.TextXAlignment.Left
    urlTitle.Parent = urlSection
    
    local urlBox = Instance.new("TextBox")
    urlBox.Name = "URLBox"
    urlBox.Size = UDim2.new(1, -20, 0, 35)
    urlBox.Position = UDim2.new(0, 10, 0, 30)
    urlBox.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
    urlBox.Text = _G.WebhookSettings.webhookUrl
    urlBox.PlaceholderText = "https://discord.com/api/webhooks/..."
    urlBox.TextColor3 = Color3.new(1, 1, 1)
    urlBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    urlBox.TextSize = 12
    urlBox.Font = Enum.Font.Gotham
    urlBox.TextXAlignment = Enum.TextXAlignment.Left
    urlBox.ClearTextOnFocus = false
    urlBox.Parent = urlSection
    
    local urlBoxCorner = Instance.new("UICorner")
    urlBoxCorner.CornerRadius = UDim.new(0, 6)
    urlBoxCorner.Parent = urlBox
    
    local saveUrlButton = Instance.new("TextButton")
    saveUrlButton.Size = UDim2.new(0, 60, 0, 25)
    saveUrlButton.Position = UDim2.new(1, -70, 0, 70)
    saveUrlButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
    saveUrlButton.Text = "üíæ Save"
    saveUrlButton.TextColor3 = Color3.new(1, 1, 1)
    saveUrlButton.TextSize = 11
    saveUrlButton.Font = Enum.Font.GothamBold
    saveUrlButton.Parent = urlSection
    
    local saveUrlCorner = Instance.new("UICorner")
    saveUrlCorner.CornerRadius = UDim.new(0, 6)
    saveUrlCorner.Parent = saveUrlButton
    
    -- Settings Section
    local settingsSection = Instance.new("Frame")
    settingsSection.Size = UDim2.new(1, 0, 0, 160)
    settingsSection.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
    settingsSection.BorderSizePixel = 0
    settingsSection.LayoutOrder = 4
    settingsSection.Parent = scrollFrame
    
    local settingsCorner = Instance.new("UICorner")
    settingsCorner.CornerRadius = UDim.new(0, 8)
    settingsCorner.Parent = settingsSection
    
    local settingsTitle = Instance.new("TextLabel")
    settingsTitle.Size = UDim2.new(1, -20, 0, 25)
    settingsTitle.Position = UDim2.new(0, 10, 0, 5)
    settingsTitle.BackgroundTransparency = 1
    settingsTitle.Text = "‚öôÔ∏è Settings"
    settingsTitle.TextColor3 = Color3.new(1, 1, 1)
    settingsTitle.TextSize = 14
    settingsTitle.Font = Enum.Font.GothamBold
    settingsTitle.TextXAlignment = Enum.TextXAlignment.Left
    settingsTitle.Parent = settingsSection
    
    -- Setting checkboxes
    local function createCheckbox(parent, name, text, yPos, setting)
        local checkbox = Instance.new("TextButton")
        checkbox.Name = name
        checkbox.Size = UDim2.new(0, 20, 0, 20)
        checkbox.Position = UDim2.new(0, 10, 0, yPos)
        checkbox.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
        checkbox.Text = _G.WebhookSettings[setting] and "‚úì" or ""
        checkbox.TextColor3 = Color3.fromRGB(40, 167, 69)
        checkbox.TextSize = 14
        checkbox.Font = Enum.Font.GothamBold
        checkbox.Parent = parent
        
        local checkCorner = Instance.new("UICorner")
        checkCorner.CornerRadius = UDim.new(0, 4)
        checkCorner.Parent = checkbox
        
        local checkLabel = Instance.new("TextLabel")
        checkLabel.Size = UDim2.new(0, 300, 0, 20)
        checkLabel.Position = UDim2.new(0, 35, 0, yPos)
        checkLabel.BackgroundTransparency = 1
        checkLabel.Text = text
        checkLabel.TextColor3 = Color3.new(1, 1, 1)
        checkLabel.TextSize = 12
        checkLabel.Font = Enum.Font.Gotham
        checkLabel.TextXAlignment = Enum.TextXAlignment.Left
        checkLabel.Parent = parent
        
        checkbox.MouseButton1Click:Connect(function()
            _G.WebhookSettings[setting] = not _G.WebhookSettings[setting]
            checkbox.Text = _G.WebhookSettings[setting] and "‚úì" or ""
        end)
        
        return checkbox
    end
    
    createCheckbox(settingsSection, "VictoryCheck", "Send webhook on Victory", 35, "sendOnVictory")
    createCheckbox(settingsSection, "DefeatCheck", "Send webhook on Defeat", 60, "sendOnDefeat")
    createCheckbox(settingsSection, "NotificationCheck", "Show notifications", 85, "showNotifications")
    createCheckbox(settingsSection, "AutoCloseCheck", "Auto-close UI after game", 110, "autoClose")
    
    -- Test Section
    local testSection = Instance.new("Frame")
    testSection.Size = UDim2.new(1, 0, 0, 80)
    testSection.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
    testSection.BorderSizePixel = 0
    testSection.LayoutOrder = 5
    testSection.Parent = scrollFrame
    
    local testCorner = Instance.new("UICorner")
    testCorner.CornerRadius = UDim.new(0, 8)
    testCorner.Parent = testSection
    
    local testTitle = Instance.new("TextLabel")
    testTitle.Size = UDim2.new(1, -20, 0, 25)
    testTitle.Position = UDim2.new(0, 10, 0, 5)
    testTitle.BackgroundTransparency = 1
    testTitle.Text = "üß™ Test"
    testTitle.TextColor3 = Color3.new(1, 1, 1)
    testTitle.TextSize = 14
    testTitle.Font = Enum.Font.GothamBold
    testTitle.TextXAlignment = Enum.TextXAlignment.Left
    testTitle.Parent = testSection
    
    local testButton = Instance.new("TextButton")
    testButton.Size = UDim2.new(1, -20, 0, 35)
    testButton.Position = UDim2.new(0, 10, 0, 35)
    testButton.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
    testButton.Text = "üöÄ Send Test Webhook"
    testButton.TextColor3 = Color3.fromRGB(33, 37, 41)
    testButton.TextSize = 12
    testButton.Font = Enum.Font.GothamBold
    testButton.Parent = testSection
    
    local testButtonCorner = Instance.new("UICorner")
    testButtonCorner.CornerRadius = UDim.new(0, 8)
    testButtonCorner.Parent = testButton
    
    -- Update scroll canvas size
    local function updateScrollSize()
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 20)
    end
    
    contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateScrollSize)
    updateScrollSize()
    
    -- Event Handlers
    local function updateStatus()
        local status = statusLabel
        local enableBtn = enableButton
        
        if _G.WebhookSettings.enabled then
            if _G.WebhookSettings.webhookUrl ~= "" then
                status.Text = "‚úÖ Webhook Active & Ready"
                status.TextColor3 = Color3.fromRGB(40, 167, 69)
                enableBtn.Text = "‚è∏Ô∏è Disable Webhook"
                enableBtn.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
            else
                status.Text = "‚ö†Ô∏è Webhook Enabled (No URL Set)"
                status.TextColor3 = Color3.fromRGB(255, 193, 7)
                enableBtn.Text = "‚è∏Ô∏è Disable Webhook"
                enableBtn.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
            end
        else
            status.Text = "‚ùå Webhook Disabled"
            status.TextColor3 = Color3.fromRGB(220, 53, 69)
            enableBtn.Text = "üîÑ Enable Webhook"
            enableBtn.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
        end
    end
    
    enableButton.MouseButton1Click:Connect(function()
        _G.WebhookSettings.enabled = not _G.WebhookSettings.enabled
        updateStatus()
        
        local action = _G.WebhookSettings.enabled and "enabled" or "disabled"
        Notifications.create("Webhook " .. string.upper(action:sub(1,1)) .. action:sub(2), 
                           "Webhook system has been " .. action, 3)
    end)
    
    saveUrlButton.MouseButton1Click:Connect(function()
        _G.WebhookSettings.webhookUrl = urlBox.Text
        _G.WebhookLink = urlBox.Text
        CONFIG.WEBHOOK_URL = urlBox.Text
        updateStatus()
        Notifications.create("URL Saved", "Webhook URL has been updated", 3)
    end)
    
    testButton.MouseButton1Click:Connect(function()
        if _G.WebhookSettings.webhookUrl == "" then
            Notifications.create("Test Failed", "Please set a webhook URL first", 4)
            return
        end
        
        -- Create test embed
        local testEmbed = {
            title = "üß™ Test Webhook ‚Äî " .. LocalPlayer.Name,
            description = "**‚úÖ Test Successful!**\n*This is a test message from ASTD Webhook Manager*",
            color = CONFIG.COLORS.DEFAULT,
            fields = {
                {
                    name = "üìä System Info",
                    value = string.format("Player: %s\nGame: %s\nTime: %s", 
                           LocalPlayer.Name, 
                           game.PlaceId == 4996049426 and "ASTD" or "Unknown Game",
                           os.date("%H:%M:%S")),
                    inline = false
                }
            },
            author = {
                name = "ASTD Webhook Manager ‚Ä¢ Test Mode",
                icon_url = "https://media.discordapp.net/attachments/1110521196639944735/1383812269821005915/jimi.png"
            },
            footer = {
                text = "Test completed at " .. os.date("%Y-%m-%d %H:%M:%S UTC"),
            },
            timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }
        
        Webhook.send(testEmbed)
        Notifications.create("Test Sent", "Test webhook has been sent to Discord", 3)
    end)
    
    closeButton.MouseButton1Click:Connect(function()
        mainFrame.Visible = false
    end)
    
    toggleButton.MouseButton1Click:Connect(function()
        mainFrame.Visible = not mainFrame.Visible
        updateStatus()
    end)
    
    -- Make frame draggable
    local dragging, dragStart, startPos
    
    header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                         startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Toggle with hotkey (F4)
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode.F4 then
            mainFrame.Visible = not mainFrame.Visible
            updateStatus()
        end
    end)
    
    -- Initial status update
    updateStatus()
    
    return screenGui
end

-- Webhook Functions
local Webhook = {}

function Webhook.createEmbed(gameData, gems)
    local info = gameData.Info
    local result = info.Result
    local isVictory = result.Win
    local totalTime = result.Description[1] and result.Description[1].V or 0
    local currentWave = Wave.Value

    local summaryLines = {
        string.format("%s **Gems:** %s", CONFIG.ICONS.GEMS, Utils.formatNumber(gems or 0)),
        string.format("%s **World:** %s", CONFIG.ICONS.WORLD, info.World.DisplayName),
        string.format("%s **Chapter %d** ‚Äî *%s*", CONFIG.ICONS.CHAPTER, info.Chapter.Chapter, info.Chapter.Name),
        string.format("%s **Total Time:** %s", CONFIG.ICONS.TIME, Utils.formatTime(totalTime)),
        string.format("%s **Wave:** %s", CONFIG.ICONS.WAVE, Utils.formatNumber(currentWave)),
        string.format("%s **XP Gained:** %s", CONFIG.ICONS.XP, Utils.formatNumber(result.XP))
    }

    for _, stat in ipairs(result.Description) do
        if stat.N == "Total DMG" then
            table.insert(summaryLines, string.format("%s **Total Damage:** %s", CONFIG.ICONS.DAMAGE, Utils.formatNumber(stat.V)))
        elseif stat.N == "Eliminations" then
            table.insert(summaryLines, string.format("%s **Eliminations:** %s", CONFIG.ICONS.ELIMINATIONS, Utils.formatNumber(stat.V)))
        end
    end

    local rewardLines = {}
    for _, reward in ipairs(result.Rewards) do
        local rewardName = reward.Name or reward.Type or "Unknown"
        local currentAmount = Utils.getItemAmount(rewardName)
        if currentAmount > 0 then
            table.insert(rewardLines, string.format("%s **%s** √ó%s *(Total: %s)*",
                CONFIG.ICONS.REWARDS, rewardName, Utils.formatNumber(reward.Amount), Utils.formatNumber(currentAmount)))
        else
            table.insert(rewardLines, string.format("%s **%s** √ó%s",
                CONFIG.ICONS.REWARDS, rewardName, Utils.formatNumber(reward.Amount)))
        end
    end

    local gameStatus = isVictory and
        string.format("%s **Victory!** ‚úÖ", CONFIG.ICONS.VICTORY) or
        string.format("%s **Defeat** ‚ùå", CONFIG.ICONS.DEFEAT)

    local embedColor = isVictory and CONFIG.COLORS.VICTORY or CONFIG.COLORS.DEFEAT

    return {
        title = string.format("Game Complete ‚Äî %s", LocalPlayer.Name),
        description = string.format("**%s**\n*%s*", gameStatus, info.World.DisplayName),
        color = embedColor,
        fields = {
            {
                name = string.format("%s Game Summary", CONFIG.ICONS.SUMMARY),
                value = table.concat(summaryLines, "\n"),
                inline = false
            },
            {
                name = string.format("%s Rewards Earned", CONFIG.ICONS.REWARDS),
                value = #rewardLines > 0 and table.concat(rewardLines, "\n") or "No rewards earned",
                inline = false
            }
        },
        author = {
            name = "ASTD Webhook Manager ‚Ä¢ Powered By Jimi Hub",
            icon_url = "https://media.discordapp.net/attachments/1110521196639944735/1383812269821005915/jimi.png"
        },
        thumbnail = {
            url = "https://tr.rbxcdn.com/180DAY-36ee10a9d4eaa65eedf17feb2b87cc04/256/256/Image/Webp/noFilter"
        },
        footer = {
            text = string.format("Completed at %s", os.date("%Y-%m-%d %H:%M:%S UTC")),
        },
        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
    }
end

function Webhook.send(embed, isTest)
    if not _G.WebhookSettings.enabled and not isTest then return end
    if _G.WebhookSettings.webhookUrl == "" then 
        Notifications.create("Webhook Error", "No webhook URL configured", 4)
        return 
    end

    local payload = {
        content = nil,
        embeds = { embed },
        attachments = {}
    }

    local success, response = pcall(function()
        local requestFunc = syn and syn.request or request
        return requestFunc({
            Url = _G.WebhookSettings.webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(payload)
        })
    end)

    if success then
        if not isTest then
            local status = embed.color == CONFIG.COLORS.VICTORY and "Victory" or "Defeat"
            Notifications.create("Webhook Sent", status .. " data sent to Discord", 3)
        end
    else
        Notifications.create("Webhook Failed", "Failed to send webhook: " .. tostring(response), 5)
        warn("Failed to send webhook:", response)
    end
end

-- Main Event Handler
local function handleGameResult(eventData)
    if eventData.Type == "Game" and
       eventData.Mode == "Result" and
       not _G.dbwebhook then

        local isVictory = eventData.Info.Result.Win
        
        -- Check settings
        if not _G.WebhookSettings.enabled then return end
        if isVictory and not _G.WebhookSettings.sendOnVictory then return end
        if not isVictory and not _G.WebhookSettings.sendOnDefeat then return end

        -- Get Gems data
        local args = {
            {
                Type = "AFK",
                Mode = "Get"
            }
        }
        local GemsData = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("GetFunction"):InvokeServer(unpack(args))

        _G.dbwebhook = true
        _G.Result = eventData
        _G.GameStatus = isVictory and "Victory" or "Defeat"

        local embed = Webhook.createEmbed(eventData, GemsData and GemsData.Cash or 0)
        Webhook.send(embed)

        -- Auto-close UI if enabled
        if _G.WebhookSettings.autoClose then
            wait(2)
            local ui = PlayerGui:FindFirstChild("ASTDWebhookUI")
            if ui then
                ui.MainFrame.Visible = false
            end
        end

        spawn(function()
            wait(3)
            _G.dbwebhook = nil
        end)
    end
end

-- Initialize System
local function initializeWebhookSystem()
    -- Create UI
    local ui = createUI()
    
    -- Connect to game events
    ReplicatedStorage.Remotes.UpdateEvent.OnClientEvent:Connect(handleGameResult)
    
    -- Welcome notification
    wait(2)
    Notifications.create("ASTD Webhook Loaded", 
                        "Press F4 to open manager or click the toggle button", 5)
    
    print("üéÆ ASTD Webhook UI System initialized successfully!")
    print("üìå Press F4 to toggle UI")
    print("üîó Configure your Discord webhook in the UI")
    print("‚ö° Made with ‚ù§Ô∏è by Jimi Hub & Claude AI")
end

-- Start the system
initializeWebhookSystem()
